from aiogram import Dispatcher, Bot
from aiogram.types import Message, CallbackQuery, BotCommand
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State


from tg_bot.keys import review_inline_keyboard, me_inlines
from tg_bot.utils import level, points_naming
import db


class FSM(StatesGroup):
    changeNick = State()


async def setup_commands(bot: Bot):
    bot_commands = [
        BotCommand(command='start', description='–°—Ç–∞—Ä—Ç'),
        BotCommand(command='review', description='–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤'),
        BotCommand(command='cancel', description='–û—Ç–º–µ–Ω–∞'),
        BotCommand(command='me', description='–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å'),
        BotCommand(command='rating', description='–¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')
    ]
    await bot.set_my_commands(bot_commands)


async def cancel_command(message: Message, state: FSMContext):
    await state.clear()
    await message.reply('–î–µ–π—Å—Ç–≤–∏–µ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ ‚úÖ')


async def start_command(message: Message):
    user = message.from_user
    username = db.add_user(user.id, user.username)
    if not username:
        username = user.username
    await message.answer("‚óè –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –í–∞—Å –æ–ø—Ü–∏—é –≤ –º–µ–Ω—é. ‚ÜôÔ∏è"+
                         '\n\n‚óè –ß—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞, –Ω–∞–∂–º–∏—Ç–µ "–û—Ç–º–µ–Ω–∞" –≤ –º–µ–Ω—é. üö´'+
                         f"\n\n‚óè –í–∞—à —Ç–µ–∫—É—â–∏–π –Ω–∏–∫–Ω–µ–π–º, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–π –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n{username}", 
                         reply_markup=me_inlines())


async def me_command(message: Message):
    data = db.get_user(message.from_user.id)
    level_ = level(data['points'])
    await message.answer(f"–í–∞—à –Ω–∏–∫–Ω–µ–π–º: {data['nickname']}\n–í–∞—à —É—Ä–æ–≤–µ–Ω—å: {level_[0]}\n–í–∞—à–∏ –±–∞–ª–ª—ã: {data['points']}/{level_[1]}",
                         reply_markup=me_inlines())


async def rating_command(message: Message):
    rating = db.get_rating(message.from_user.id)
    rating_str = '–¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n'
    for i in rating[:-1]:
        rating_str += f"{i['pos']}. {i['nickname']} | {level(i['points'])[0]} —É—Ä–æ–≤–µ–Ω—å | {i['points']} {points_naming(i['points'])}\n"
    rating_str += f"–í—ã:\n{rating[-1]['pos']}. {rating[-1]['nickname']} | {level(rating[-1]['points'])[0]} —É—Ä–æ–≤–µ–Ω—å | {rating[-1]['points']} {points_naming(rating[-1]['points'])}"
    await message.answer(rating_str)


async def inlines_handler(call: CallbackQuery, state: FSMContext):
    data = call.data.split('_')
    match data[0]:
        case 'changeNick':
            await call.message.answer('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–∏–∫–Ω–µ–π–º')
            await state.set_state(FSM.changeNick)
            await call.answer()


async def change_nick(message: Message, state: FSMContext):
    db.change_nickname(message.from_user.id, message.text)
    await message.answer(f"–æ—Ç–æ–≤–æ. –í–∞—à –Ω–æ–≤—ã–π –Ω–∏–∫–Ω–µ–π–º::\n{message.text}")
    await state.clear()


async def review_command(message: Message):
    await message.answer("–ß—Ç–æ–±—ã –∑–∞–ø–æ–ª–Ω–∏—Ç—å –æ—Ç–∑—ã–≤, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá", reply_markup=review_inline_keyboard())


def register_handlers(dp: Dispatcher):
    dp.message.register(cancel_command, Command(commands='cancel'))
    dp.callback_query.register(inlines_handler)
    dp.message.register(change_nick, FSM.changeNick)
    dp.message.register(review_command, Command(commands='review'))
    dp.message.register(start_command, Command(commands='start'))
    dp.message.register(me_command, Command(commands='me'))
    dp.message.register(rating_command, Command(commands='rating'))
